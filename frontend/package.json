{
  "name": "@openverse/frontend",
  "description": "Openverse frontend",
  "private": true,
  "version": "2.2.1",
  "scripts": {
    "predev": "pnpm install && pnpm i18n:no-get",
    "dev": "run-p dev:only 'i18n:en --watch'",
    "dev:only": "nuxt dev --host 0.0.0.0",
    "dev:secure": "LOCAL_SSL=enabled pnpm dev",
    "prebuild": "pnpm install && pnpm i18n",
    "build": "pnpm build:only",
    "build:only": "NODE_ENV=production nuxt build",
    "build:clean": "rm -rf .nuxt",
    "docker:build": "docker build . -t openverse-frontend:latest",
    "docker:run": "docker run --rm -it -p 127.0.0.1:8443:8443/tcp openverse-frontend:latest",
    "generate": "nuxt generate",
    "start": "PORT=\"${PORT:-8443}\" CONSOLA_LEVEL=\"${CONSOLA_LEVEL:-1}\" node .output/server/index.mjs",
    "start:mem": "PORT=\"${PORT:-8443}\" CONSOLA_LEVEL=\"${CONSOLA_LEVEL:-1}\" node --inspect .output/server/index.mjs",
    "start:playwright": "pnpm i18n:copy-test-locales && pnpm start",
    "prod": "pnpm build:only && pnpm start",
    "prod:playwright": "pnpm i18n:copy-test-locales && pnpm prod",
    "storybook": "TEST=true storybook dev --port 54000",
    "storybook:build": "nuxt storybook build",
    "storybook:build-for-docs": "NODE_OPTIONS=--openssl-legacy-provider nuxt storybook build",
    "talkback": "node ./test/proxy.js",
    "pretest": "pnpm install",
    "prepare-nuxt": "pnpm run i18n:copy-test-locales && nuxt prepare",
    "postinstall:nuxt": "pnpm run prepare-nuxt",
    "test": "pnpm test:unit && pnpm test:playwright",
    "test:unit": "pnpm run i18n:en && vitest run",
    "test:unit:ui": "vitest run --ui",
    "test:unit:coverage": "vitest run --coverage",
    "test:unit:watch": "pnpm test:unit --collectCoverage=false --watch",
    "test:playwright": "./bin/playwright.sh",
    "test:playwright:local": "playwright test -c test/playwright",
    "test:playwright:debug": "PWDEBUG=1 pnpm test:playwright:local",
    "test:playwright:recreate-tapes": "rimraf test/tapes && pnpm test:playwright:update-tapes",
    "test:playwright:update-tapes": "UPDATE_TAPES=true pnpm test:playwright",
    "test:playwright:gen": "playwright codegen localhost:8443/",
    "test:playwright:faststart": "FASTSTART=true pnpm test:playwright",
    "test:storybook": "TEST_COMMAND=test:storybook:local ./bin/playwright.sh",
    "test:storybook:local": "playwright test -c test/storybook",
    "test:storybook:debug": "PWDEBUG=1 pnpm test:storybook:local",
    "test:storybook:gen": "playwright codegen localhost:54000/",
    "types": "vue-tsc -p .",
    "i18n": "pnpm i18n:create-locales-list && pnpm i18n:get-translations && pnpm i18n:update-locales",
    "i18n:en": "pnpm i18n:get-translations --en-only",
    "i18n:copy-test-locales": "cp test/locales/**.json src/locales/ && mv src/locales/valid-locales.json src/locales/scripts/valid-locales.json",
    "i18n:no-get": "pnpm i18n:create-locales-list && pnpm i18n:update-locales",
    "i18n:create-locales-list": "node src/locales/scripts/create-wp-locale-list",
    "i18n:get-translations": "node src/locales/scripts/get-translations",
    "i18n:update-locales": "node src/locales/scripts/get-validated-locales",
    "i18n:generate-pot": "node src/locales/scripts/json-to-pot",
    "i18n:check": "vue-i18n-extract report --vueFiles './src/*/**.?(js|ts|vue)' --languageFiles './src/locales/en.json'",
    "create:component-sfc": "remake component",
    "create:story": "remake story",
    "create:component-storybook-test": "remake component-storybook-test",
    "create:component-unit-test": "remake component-unit-test",
    "create:component-scaffolding": "npm-run-all \"create:component-sfc --output=src/components --name={1}\" \"create:story --output=src/components/{1}/meta --name={1}\" \"create:component-unit-test --output=test/unit/specs/components/{1} --name={1} --fileName={2}\" \"create:component-storybook-test --output=test/storybook/visual-regression --fileName={2} --name={1}\" --",
    "create:component": "./bin/create-component.sh",
    "doc:media-props": "node ./scripts/document-media.js",
    "build-storybook": "storybook build"
  },
  "dependencies": {
    "@floating-ui/dom": "^1.6.5",
    "@intlify/core-base": "^9.13.1",
    "@intlify/message-compiler": "^9.13.1",
    "@nuxtjs/plausible": "^1.0.0",
    "@nuxtjs/sitemap": "^5.1.5",
    "@nuxtjs/tailwindcss": "^6.12.0",
    "@pinia/nuxt": "^0.5.1",
    "@sentry/vue": "^8.2.1",
    "@tailwindcss/typography": "^0.5.13",
    "@vueuse/core": "^10.9.0",
    "@wordpress/is-shallow-equal": "^4.58.0",
    "async-mutex": "^0.5.0",
    "axios": "^1.6.8",
    "axios-mock-adapter": "^1.22.0",
    "clipboard": "^2.0.11",
    "focus-trap": "^7.5.4",
    "focus-visible": "^5.2.0",
    "pinia": "^2.1.7",
    "postcss-focus-visible": "^9.0.1",
    "rfdc": "^1.3.1",
    "seeded-rand": "^2.0.1",
    "throttle-debounce": "^5.0.0",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@nuxt/test-utils": "^3.13.0",
    "@nuxtjs/i18n": "^8.3.1",
    "@playwright/test": "1.44.0",
    "@testing-library/user-event": "^14.5.2",
    "@testing-library/vue": "^8.0.3",
    "@types/node": "^20.12.12",
    "@vitest/coverage-v8": "^1.6.0",
    "@vitest/ui": "^1.6.0",
    "@vue/test-utils": "^2.4.6",
    "adm-zip": "^0.5.12",
    "eslint-plugin-jsonc": "^2.15.1",
    "jsdom": "^24.0.0",
    "node-html-parser": "^6.1.13",
    "npm-run-all2": "^6.1.2",
    "nuxt": "^3.11.2",
    "rimraf": "^5.0.7",
    "talkback": "^4.1.0",
    "typescript": "5.4.5",
    "vitest": "^1.6.0",
    "vitest-dom": "^0.1.1",
    "vue": "3.4.27",
    "vue-router": "^4.3.2",
    "vue-tsc": "^2.0.19"
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not dead"
  ]
}
